#!/bin/bash
set -e

if [[ "$(id -u)" -ne 0 ]]; then
    echo 'Must be run as root.'
    exit 1
fi

# Get the parent directory of the script
scriptDir="$(dirname "$(readlink -f "$0")")"

# Build packages using all available cores
cores="$(grep -c ^processor /proc/cpuinfo)"
if [[ "$cores" =~ ^[0-9]+$ ]]; then
    sed -i "s/^#MAKEFLAGS=\"-j2\"/MAKEFLAGS=\"-j$((cores + 1))\"/" /etc/makepkg.conf
    sed -i "s/^COMPRESSXZ=(xz -c -z -)/COMPRESSXZ=(xz -c -T $cores -z -)/" /etc/makepkg.conf
fi

# Update the system and populate the mirror list
pacman -Syyu --noconfirm
pacman -S --noconfirm --needed reflector
reflector --save /etc/pacman.d/mirrorlist --protocol https --country US --sort score --age 1 --score 5

# Install regular packages
pacman -S --noconfirm --needed - < "$scriptDir/pkgs"
pacman -S --noconfirm --needed --asdeps - < "$scriptDir/opt-pkgs"

useradd --system --create-home aur
echo 'aur ALL=NOPASSWD: /usr/bin/pacman' > /etc/sudoers.d/aur

# Install the AUR helper yay
pacman -S --noconfirm --needed git base-devel
if ! pacman -Q yay-bin &>/dev/null; then
    buildDir="$(runuser -u aur -- mktemp -d)"
    cd "$buildDir"
    runuser -u aur -- git clone https://aur.archlinux.org/yay-bin.git
    cd yay-bin
    runuser -u aur -- makepkg -s
    pacman -U --noconfirm -- *.pkg.*
    cd "$scriptDir"
    rm -r "$buildDir"
fi

runuser -u aur -- yay -S --noconfirm --needed - < "$scriptDir/aur-pkgs"
runuser -u aur -- yay -S --noconfirm --needed --asdeps - < "$scriptDir/aur-opt-pkgs"

userdel --remove aur
rm /etc/sudoers.d/aur

# Remove build dependencies
pacman -Qqtd | pacman -Rns - || true

# Install system configuration files
cp "$scriptDir/etc/"* /etc

# Edit system configuration files

# Enable bluetooth automatically
sed -i 's/'#AutoEnable=false'/'AutoEnable=true'/g' /etc/bluetooth/main.conf

# Causes the presence of /etc/hushlogins to supress the tty login message
sed -i 's/^HUSHLOGIN/#HUSHLOGIN/' /etc/login.defs

mkinitcpio --allpresets

# Needed for autorandr
udevadm control --reload-rules

# Start desktop environment by default
systemctl set-default graphical.target

# Enable and start services
systemctl enable --now systemd-resolved.service
systemctl enable --now NetworkManager.service
systemctl enable --now NetworkManager-dispatcher.service
systemctl enable --now NetworkManager-wait-online.service
systemctl enable --now bluetooth.service
systemctl enable --now cups.service
systemctl enable --now tlp.service
systemctl enable --now systemd-timesyncd.service
systemctl enable --now autorandr.service
systemctl enable --now reflector.timer
systemctl enable --now dictd.service
systemctl enable --now auditd.service
systemctl enable --now linux-modules-cleanup.service
systemctl enable --now nohang-desktop.service
systemctl enable --now udisks2.service
systemctl disable --now systemd-homed.service
systemctl daemon-reload
